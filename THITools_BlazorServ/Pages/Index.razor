@page "/"
@using Microsoft.AspNetCore.Components.Authorization  
@using System.Security.Principal
@inject AuthenticationStateProvider AuthenticationStateProvider  

@*<p>@_authMessage</p>*@

@*<AuthorizeView>  
    <Authorized>   
        <h4>Hello, @context.User.Identity.Name!</h4>  
    </Authorized>  
    <NotAuthorized>  
        <p>Please sign in.</p>  
    </NotAuthorized>  
</AuthorizeView>  *@




<PageTitle>THI Tools</PageTitle>

<p>Auth Status: @authMessage</p>

<h1>Welcome: @welcomeMessage</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />




@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    string authMessage = "The user is NOT authenticated.";
    string welcomeMessage = "Please sign in with a valid account.";

    private async Task GetClaimsPrincipalData()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            authMessage = $"{user.Identity.Name} is authenticated.";
            welcomeMessage = $"Hello, {user.Identity.Name}.";
            //_claims = user.Claims;
            //_surnameMessage = 
            //    $"Surname: {user.FindFirst(c => c.Type == ClaimTypes.Surname)?.Value}";
        }
        else
        {
            authMessage = "The user is NOT authenticated.";
            welcomeMessage = "Please sign in with a valid account.";
        }
    }
}